.. change::
    :tags: bug, sqlite, autogenerate, batch
    :tickets: 579

    SQLite server default reflection will ensure parenthesis are surrounding a
    column default expression that is detected as being a non-constant
    expression, such as a ``datetime()`` default, to accommodate for the
    requirement that SQL expressions have to be parenthesized when being sent
    as DDL.  Parenthesis are not added to constant expressions to allow for
    maximum cross-compatibility with other dialects and existing test suites
    (such as Alembic's), which necessarily entails scanning the expression to
    eliminate for constant numeric and string values. The logic is added to the
    two "reflection->DDL round trip" paths which are currently autogenerate and
    batch migration.  Within autogenerate, the logic is on the rendering side,
    whereas in batch the logic is installed as a column reflection hook.


.. change::
    :tags: bug, sqlite, autogenerate
    :tickets: 579

    Improved SQLite server default comparison to accommodate for a ``text()``
    construct that added parenthesis directly vs. a construct that relied
    upon the SQLAlchemy SQLite dialect to render the parenthesis, as well
    as improved support for various forms of constant expressions such as
    values that are quoted vs. non-quoted.


.. change::
    :tags: bug, autogenerate

    Fixed bug where the "literal_binds" flag was not being set when
    autogenerate would create a server default value, meaning server default
    comparisons would fail for functions that contained literal values.